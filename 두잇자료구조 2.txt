Q1

/* 배열 요소의 최댓값을 구합니다(값을 입력합니다). */
#include <stdio.h>
#include <stdlib.h>

/*--- 요솟수가 n인 배열 a의 요소의 최댓값을 구합니다. ---*/
int maxof(const int a[], int n)
{
	int i;
	int max = a[0]; 		/* 최댓값 */

	for (i = 1; i < n; i++)
		if (a[i] < max) max = a[i];

	return max;
}

int main(void)
{
	int i;
	int* height;			/* 배열의 첫 번째 요소의 포인터 */
	int number;				/* 인원 = 배열 ​​height의 요소 개수 */
	printf("사람 수 : ");
	scanf_s("%d", &number);
	height = calloc(number, sizeof(int));	/* 요솟수가 number개인 배열을 생성 */

	printf("%d 사람의 키를 입력하세요.\n", number);
	for (i = 0; i < number; i++) {
		printf("height[%d] : ", i);
		scanf_s("%d", &height[i]);
	}

	printf("최소값은 %d입니다.\n", maxof(height, number));

	free(height); 				/* 배열 height를 해제 */

	return 0;
}


//
Q2

/* 배열 요소의 최댓값을 구합니다(값을 입력합니다). */
#include <stdio.h>
#include <stdlib.h>

/*--- 요솟수가 n인 배열 a의 요소의 최댓값을 구합니다. ---*/
int maxof(const int a[], int n)
{
	int i;
	int max = a[0]; 		/* 최댓값 */

	for (i = 1; i < n; i++)
		max = max + a[i];

	return max;
}

int main(void)
{
	int i;
	int* height;			/* 배열의 첫 번째 요소의 포인터 */
	int number;				/* 인원 = 배열 ​​height의 요소 개수 */
	printf("사람 수 : ");
	scanf_s("%d", &number);
	height = calloc(number, sizeof(int));	/* 요솟수가 number개인 배열을 생성 */

	printf("%d 사람의 키를 입력하세요.\n", number);
	for (i = 0; i < number; i++) {
		printf("height[%d] : ", i);
		scanf_s("%d", &height[i]);
	}

	printf("합은 %d입니다.\n", maxof(height, number));

	free(height); 				/* 배열 height를 해제 */

	return 0;
}

Q3

/* 배열 요소의 최댓값을 구합니다(값을 입력합니다). */
#include <stdio.h>
#include <stdlib.h>

/*--- 요솟수가 n인 배열 a의 요소의 최댓값을 구합니다. ---*/
int maxof(const int a[], int n)
{
	int i;
	int max = a[0]; 		/* 최댓값 */

	for (i = 1; i < n; i++)
		max = max + a[i];

	return max/n;
}

int main(void)
{
	int i;
	int* height;			/* 배열의 첫 번째 요소의 포인터 */
	int number;				/* 인원 = 배열 ​​height의 요소 개수 */
	printf("사람 수 : ");
	scanf_s("%d", &number);
	height = calloc(number, sizeof(int));	/* 요솟수가 number개인 배열을 생성 */

	printf("%d 사람의 키를 입력하세요.\n", number);
	for (i = 0; i < number; i++) {
		printf("height[%d] : ", i);
		scanf_s("%d", &height[i]);
	}

	printf("평균은 %d입니다.\n", maxof(height, number));

	free(height); 				/* 배열 height를 해제 */

	return 0;
}
Q4

/* 배열 요소의 최댓값을 구합니다(값을 난수로 생성). */
#include <time.h>
#include <stdio.h>
#include <stdlib.h>

/*--- 요솟수가 n인 배열 a의 요소의 최댓값을 구합니다. ---*/
int maxof(const int a[], int n)
{
	int i;
	int max = a[0]; 		/* 최댓값 */
	for (i = 1; i < n; i++)
		if (a[i] > max) max = a[i];
	return max;
}

Q6

/* 정수를 2진수 ~ 36진수로 기수 변환 */
#include <stdio.h>

/*--- 정수 값 x를 n진수로 변환하여 배열 d에 아랫자리부터 저장 ---*/
int card_convr(unsigned x, int n, char d[])
{
	char dchar[] = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	int digits = 0; 			/* 변환 후 자릿수 */
	int i;
	char swqp;
	if (x == 0) 				/* 0이면 */
		d[digits++] = dchar[0]; 		/* 변환 후에도 0 */
	else
		while (x) {
			d[digits++] = dchar[x % n]; 	/* n으로 나눈 나머지를 저장 */
			x /= n;
		}
	
	for (i = 0; i < digits/2;i++) {
	
		swqp = d[i];

		d[i] = d[digits - i - 1];
		d[digits - i - 1] = swqp;

	
	}


	return digits;
}



int main(void)
{
	int i;
	unsigned no; 		/* 변환하는 정수 */
	int cd;				/* 기수 */
	int dno;			/* 변환 후 자릿수 */
	char cno[512]; 		/* 변환한 값의 각 자리의 숫자를 저장하는 문자 배열 */
	int retry;			/* 한 번 더? */

	puts("10진수를 기수 변환합니다.");
	do {
		printf("변환하는 음이 아닌 정수 : ");
		scanf_s("%u", &no);

		do {
			printf("어떤 진수로 변환할까요? (2-36) : ");
			scanf_s("%d", &cd);
		} while (cd < 2 || cd> 36);

		dno = card_convr(no, cd, cno); 		/* no를 cd진수로 변환 */

		printf("%d진수로는", cd);
		for (i = dno - 1; i >= 0; i--) 		/* 윗자리부터 차례로 출력 */
			printf("%c", cno[i]);
		printf("입니다.\n");

		printf("한 번 더 할까요? (1 … 예 /0 … 아니오) : ");
		scanf_s("%d", &retry);
	} while (retry == 1);

	return 0;
}





int main(void)
{
	srand(time(NULL));
	int i;
	int* height; 		/* 배열의 첫 번째 요소의 포인터 */
	int number = 5 + rand() % 15; 		/* 사람 수 = 배열 ​​height의 요솟수 */
	printf("사람 수 : %d\n",number);
	

	height = calloc(number, sizeof(int));		/* 요솟수가 number인 배열을 생성 */

							/* 시간으로 난수의 seed(씨앗)을 초기화 */
	for (i = 0; i < number; i++) {
		height[i] = 100 + rand() % 90;			/* 100 ~ 189의 난수를 생성 · 대입 */
		printf("height[%d] = %d\n", i, height[i]);
	}

	printf("최댓값은 %d입니다.\n", maxof(height, number));

	free(height); 			/* 배열 height를 해제 */

	return 0;
}

Q7

/* 정수를 2진수 ~ 36진수로 기수 변환 */
#include <stdio.h>

/*--- 정수 값 x를 n진수로 변환하여 배열 d에 아랫자리부터 저장 ---*/
int card_convr(unsigned x, int n, char d[])
{
	char dchar[] = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	int digits = 0; 			/* 변환 후 자릿수 */
	
	if (x == 0) 				/* 0이면 */
		d[digits++] = dchar[0]; 		/* 변환 후에도 0 */
	else
		while (x) {
			unsigned k = x;
			printf("%d | %d --> %d\n", n, x,k % n);
			printf(" +-------\n");
			d[digits++] = dchar[x % n]; 	/* n으로 나눈 나머지를 저장 */
			x /= n;
		}
	printf("0\n");
	return digits;
}

int main(void)
{
	int i;
	unsigned no; 		/* 변환하는 정수 */
	int cd;				/* 기수 */
	int dno;			/* 변환 후 자릿수 */
	char cno[512]; 		/* 변환한 값의 각 자리의 숫자를 저장하는 문자 배열 */
	int retry;			/* 한 번 더? */

	puts("10진수를 기수 변환합니다.");
	do {
		printf("변환하는 음이 아닌 정수 : ");
		scanf_s("%u", &no);

		do {
			printf("어떤 진수로 변환할까요? (2-36) : ");
			scanf_s("%d", &cd);
		} while (cd < 2 || cd> 36);

		dno = card_convr(no, cd, cno); 		/* no를 cd진수로 변환 */

		printf("%d진수로는", cd);
		for (i = dno - 1; i >= 0; i--) 		/* 윗자리부터 차례로 출력 */
			printf("%c", cno[i]);
		printf("입니다.\n");

		printf("한 번 더 할까요? (1 … 예 /0 … 아니오) : ");
		scanf_s("%d", &retry);
	} while (retry == 1);

	return 0;
}

Q8

#include<stdio.h>

void ary_copy(int a[], const int b[], int n) {


	int i = 0;

	for (i = 0; i < n; i++) {
	
		a[i] = b[i];
	
	
	}


}

Q9

#include<stdio.h>

void ary_copy(int a[], const int b[], int n) {


	int i = 0;

	for (i = 0; i < n; i++) {
	
		a[n - 1- i] = b[i];
	
	
	}


}

Q10

#include<stdio.h>
#include<time.h>
#include<stdlib.h>

void shuffle(int a[], int n)
{
	int i;
	int s;
	srand(time(NULL));
	for (i = n - 1; i> 0; i--) {		/* 배열 a를 셔플 */
		int j = rand() % (i + 1);
		if (i != j)
		s = a[i];
		a[i] = a[j];
		a[j] = s;
	}
}

int main(void)
{
	int i;
	int * x;		/* 배열의 첫 번째 요소에 대한 포인터 */
	int nx;			/* 배열 x의 요솟수 */

	printf("요솟수 : ");
	scanf_s("%d", &nx);
	x = calloc(nx, sizeof(int));			/* 요솟수 nx인 int 형 배열 x를 생성 */

	printf("%d 개의 정수를 입력하세요.\n", nx);
	for (i = 0; i < nx; i++) {
		printf("x[%d] : ", i);
		scanf_s("%d", &x[i]);
	}

	shuffle(x, nx); /* 배열 x의 요소 순서를 셔플 */

	printf("배열 요소의 순서를 셔플했습니다.\n");
	for (i = 0; i < nx; i++)
		printf("x[%d] = %d\n", i, x[i]);

	free(x); /* 배열 x를 해제 */

	return 0;
}

Q11

/* 한 해의 지난 날 수를 구합니다. */
#include <stdio.h>

/*- 각 달의 날 수 -*/
int mdays[][12] = {
	{ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 },
	{ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }
};

/*--- year년이 윤년인가? ---*/
int isleap(int year)
{
	return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
}

/*--- y년 m월 d일의 그 해 지난 날 수를 구합니다. ---*/
int dayofyear(int y, int m, int d)
{
	int i;
	int days = d; 		/* 날 수 */

	while(m--)
		d += mdays[isleap(y)][i - 1];

	return d;
}

int main(void)
{
	int year, month, day; 		/* 년, 월, 일 */
	int retry; 					/* 다시? */

	do {
		printf("년 : "); scanf_s("%d", &year);
		printf("월 : "); scanf_s("%d", &month);
		printf("일 : "); scanf_s("%d", &day);
		printf("%d년의 %d일째입니다.\n", year, dayofyear(year, month, day));
		printf("다시 할까요? (1 … 예/0 … 아니오) : ");
		scanf_s("%d", &retry);
	} while (retry == 1);

	return 0;
}
